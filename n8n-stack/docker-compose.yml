volumes:
  postgres_data:
  n8n_data:
  redis_data:

networks:
  web:
    external: true         
  internal:
    external: true    

x-all-shared: &all-shared
  networks:
    - internal
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "5"

x-n8n-shared: &n8n-shared
  restart: always
  image: n8nio/n8n:1.114.0
  environment: &n8n-shared-environment
    DB_TYPE: postgresdb
    DB_POSTGRESDB_HOST: postgres
    DB_POSTGRESDB_PORT: "5432"
    DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
    DB_POSTGRESDB_USER: ${POSTGRES_USER}
    DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}
    EXECUTIONS_MODE: queue
    QUEUE_BULL_REDIS_HOST: redis
    QUEUE_HEALTH_CHECK_ACTIVE: "true"
    QUEUE_BULL_REDIS_PORT: "6379"
    QUEUE_BULL_REDIS_PASSWORD: ${REDIS_PASSWORD}
    N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
    TZ: ${GENERIC_TIMEZONE}
    GENERIC_TIMEZONE: ${GENERIC_TIMEZONE}
    NODE_ENV: production
    N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "true"
    N8N_BLOCK_ENV_ACCESS_IN_NODE: "true"
    N8N_RUNNERS_ENABLED: "true"
    OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS: "true"
  volumes:
    - n8n_data:/home/node/.n8n
    - ./local-files:/files
  depends_on: &n8n-shared-depends-on
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  postgres:
    <<: *all-shared
    image: postgres:17.6
    container_name: n8n-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    <<: *all-shared
    image: redis:8.2.1-alpine
    container_name: n8n-redis
    restart: always
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-web:
    <<: [*all-shared, *n8n-shared]
    container_name: n8n-web
    environment:
      <<: *n8n-shared-environment
      N8N_EDITOR_BASE_URL: "https://${N8N_EDITOR_SUBDOMAIN}.${DOMAIN_NAME}"
      N8N_PROTOCOL: "https"
      WEBHOOK_URL: "https://${N8N_WEBHOOK_SUBDOMAIN}.${DOMAIN_NAME}/"
      N8N_PROXY_HOPS: "1"
    networks:
      - internal
      - web        
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      # Security headers middleware
      - "traefik.http.middlewares.n8n-headers.headers.STSSeconds=315360000"
      - "traefik.http.middlewares.n8n-headers.headers.browserXSSFilter=true"
      - "traefik.http.middlewares.n8n-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.n8n-headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.n8n-headers.headers.STSIncludeSubdomains=true"
      - "traefik.http.middlewares.n8n-headers.headers.STSPreload=true"
      # Editor router
      - "traefik.http.routers.n8n-editor.rule=Host(`${N8N_EDITOR_SUBDOMAIN}.${DOMAIN_NAME}`)"
      - "traefik.http.routers.n8n-editor.entrypoints=websecure"
      - "traefik.http.routers.n8n-editor.tls.certresolver=letsencrypt"
      - "traefik.http.routers.n8n-editor.middlewares=n8n-headers"
      - "traefik.http.routers.n8n-editor.service=n8n-service"
      # Webhook router
      - "traefik.http.routers.n8n-webhook.rule=Host(`${N8N_WEBHOOK_SUBDOMAIN}.${DOMAIN_NAME}`)"
      - "traefik.http.routers.n8n-webhook.entrypoints=websecure"
      - "traefik.http.routers.n8n-webhook.tls.certresolver=letsencrypt"
      - "traefik.http.routers.n8n-webhook.middlewares=n8n-headers"
      - "traefik.http.routers.n8n-webhook.service=n8n-service"
      # Backend service
      - "traefik.http.services.n8n-service.loadbalancer.server.port=5678"

  n8n-worker:
    <<: [*all-shared, *n8n-shared]
    environment:
      <<: *n8n-shared-environment
    command: worker
    depends_on:
      <<: *n8n-shared-depends-on
      n8n-web:
        condition: service_started
    networks:
      - internal
